{"version":3,"sources":["main.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","find","Selector","scope","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AAETC,UAFS,kBAEFC,MAFE,EAEM;AACX,YAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,kBAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB;AACA,eAAOJ,UAAUK,OAAV,CAAkBC,UAAzB;AACH,KANQ;AAOTC,QAPS,gBAOJC,QAPI,EAOMC,KAPN,EAOa;AAClB,eAAO,CAACA,SAASR,QAAV,EAAoBS,gBAApB,CAAqCF,QAArC,CAAP;AACH,KATQ;AAUTG,SAVS,iBAUHC,IAVG,EAUGC,IAVH,EAUSC,KAVT,EAUgB;AACrB,YAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AACxBJ,iBAAKD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACH,SAFD,MAEO,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,gBAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B,uBAAOD,KAAKD,KAAL,CAAWE,IAAX,CAAP;AACH,aAFD,MAEO,IAAIA,gBAAgBI,MAApB,EAA4B;AAC/B,oBAAMC,SAASL,IAAf;AACA,qBAAK,IAAIM,GAAT,IAAgBD,MAAhB,EAAwB;;AAEpBN,yBAAKD,KAAL,CAAWQ,GAAX,IAAkBD,OAAOC,GAAP,CAAlB;AAEH;AAEJ;AACJ;AACJ,KA1BQ;AA2BTC,QA3BS,gBA2BJC,QA3BI,EA2BMC,EA3BN,EA2BU;AACf,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAASL,MAA7B,EAAqCO,GAArC,EAA0C;AACtCD,eAAGE,IAAH,CAAQ,IAAR,EAAcH,SAASE,CAAT,CAAd;AACH;AACJ;AA/BQ,CAAb","file":"main.b7bc1408.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild\r\n    },\r\n    find(Selector, scope) {\r\n        return (scope || document).querySelectorAll(Selector)\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n\r\n                    node.style[key] = object[key]\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n}"]}